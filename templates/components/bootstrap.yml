header:
    doc: |
        Page header.
    container: true
    args:
        - title:
            values: $text | $none | $expression
            default: ~
            doc: header title
        - subtitle:
            values: $text | $none | $expression
            default: ~
            doc: header subtitle
        - size: 
            values: default | large | small
            default: default
            doc: header size
    template: |
        {% set tags = {'default': 'h2', 'large': 'h1', 'small': 'h3'} %}
        {% set tag = tags[args.size] %}
        <div class="page-header">
            {% if args.title or args.subtitle %}
                <{{ tag }}>
                    {% if args.title %}{{ args.title }}{% endif %}
                    {% if args.subtitle %}<small>{{ args.subtitle }}</small>{% endif %}
                </{{ tag }}>
            {% endif %}
            {% if contents %}
                <p>{{ contents }}</p>
            {% endif %}
        </div>

navlist:
    container: false
    template: |
        {% raw %}
        <ul class="nav nav-stacked">
            <li ng-repeat="nav_item in nav_items">
                <a href="#{{ nav_item.id }}">
                    <span ng-bind-html-unsafe="nav_item.text"></span>
                </a>
            </li>
        </ul>
        {% endraw %}

nav:
    container: true
    args:
        - text: 
            values: $text
    template: |
        <tr-nav>
            <div class="tr-nav-text">
                {{ args.text }}
            </div>
            {{ contents }}
        </tr-nav>

panel:
    container:  true
    args:
        - header: 
            values: $text | $none
            default: ~
        - footer: 
            values: $text | $none
            default: ~
        - title: 
            values: $bool | $expression
            default: false
        - style: 
            values: default | primary | $context | $expression
            default: default
    template: |
        {% call macros.div_class_fmt(True, 'panel', style='panel-%s') %}
            {%- if args.header %}
                <div class="panel-heading">
                    {% call macros.class_if('title', 'panel-title') %}
                        {{ args.header }}
                    {% endcall %}
                </div>
            {% endif -%}
            <div class="panel-body">
                {{ contents }}
            </div>
            {%- if args.footer %}
                <div class="panel-footer">
                    {{ args.footer }}
                </div>
            {% endif -%}
        {% endcall %} 

well:
    container:  true
    args:
        - size: 
            values: default | small | large | $expression
            default: default
    template: |
        {% call macros.div_class_fmt(True, 'well', size={'small': 'well-sm', 
            'large': 'well-lg', 'default': 'well-default', '?': 'well-default'}) %}
            {{ contents }}
        {% endcall %}

form:
    container: true
    args:
        - style: 
            values: default | inline | horizontal
            default: default
    template: |
        <form role="form">
            {% call macros.div_class_fmt(args.style != 'default', None, style='form-%s') %}
                {{ contents }}
            {% endcall %}
        </form>

select:
    container: false
    args:
        - id:
            values: $id
        - options:
            values: $dict | $list | $options
        - label:
            values: $text | $none
            default: ~
        - placeholder:
            values: $text | $none
            default: ~
        - form:
            values: $bool
            default: true
        - init:
            values: $none | $string | $number
            default: $none
    template: |
        <div class="form-group">
            {% if args.label %}
                <label for="{{ args.id }}">{{ args.label }}</label>
            {% endif %}
            {% set ng = args.options is not sequence and args.options is not mapping %}
            {% set init_value = '' if args.init is none else "env.%s=%s;"|format(
                args.id, args.init|to_json) %}
            {% set init_options = '' if ng else "options_%s=%s;"|format(
                args.id, args.options|to_json) %}
            {% set init = init_value + init_options %}
            {% set options = args.options if ng else ('o for o in options_' + args.id if
                args.options is sequence else 'k as v for (k, v) in options_' + args.id) %}
            <select
                id="{{ args.id }}"
                {{ attr_if(args.form, 'class', 'form-control') }} 
                ng-model="env.{{ args.id }}"
                ng-options="{{ options }}"
                {{ attr_if(init, 'ng-init', init) }}
            >
                {% if placeholder is not none %}
                    <option value=''>{{ placeholder }}</option>
                {% endif %}
            </select>
        </div>

checkbox:
    container: false
    args:
        - id:
            values: $id
        - label:
            values: $text
        - init:
            values: $none | $bool
            default: ~
    template: |
        <div class="checkbox">
            <label>
                <input 
                    type="checkbox" 
                    ng-model="env.{{ args.id }}"
                    {{ attr_if(args.init, 'ng-init', 
                        'env.%s=%s;'|format(args.id, args.init|to_json)) }}
                >
                {{ args.label }}
            </label>
        </div>

icon:
    container: false
    args:
        - name:
            values: $icon | $expression
        - size:
            values: default | large | 2x | 3x | 4x | 5x | $expression
            default: default
        - fixed:
            values: $bool | $expression
            default: false
        - spin:
            values: $bool | $expression
            default: false
    template: |
        <i {{ class_fmt('fa', name='%s', size={'default': '', 'large': 'fa-lg',
            '2x': 'fa-2x', '3x': 'fa-3x', '4x': 'fa-4x', '5x': 'fa-5x'},
            fixed={True: 'fa-fw', False: ''}, spin={True: 'fa-spin', False: ''}) }}>
        </i>
